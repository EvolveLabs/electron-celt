os:
  - linux
  - osx

language: node_js
node_js:
  - "iojs-v2.2.1"

env:
  global:
    - target: 0.28.2 # electron version
    - bin_dir: ./node_modules/electron-updater-tools/bin
    # s3accessKeyId
    - secure: "QExGEfZeuPOHnrS3zYM3PSxd9mvNgA7rTnlZCVivIHTEz+/LYR81V9DCG/DyBzrb/LBh0K8CR2eEuPgaYkbzcmVD/TBKvwxJN2nv2RZ0ml6twISkL5Ms6oLDWZFiWyfDhcbSSFXZvC9cBtrv5cdkmiR6VtXqQ1WRtJxfKFtWxOHJs7BACTOjx6AFARBdRwFeWXkuqZ0aFkzwzD68mChr+cd2zw0xt5LuFIjMEZ8MiJ3HpMmijXNvxSgWch2QfpRGyl7Yp3HAm7bv1fY+oenMHzage/0vY1gUD0F/QmJxUuwvq+NkLBzurbfty8OvIvZxdQyE8SA+sC4Eh7FJCrcIjEfxFcAFgfv8WXeQkTL5Dkv/94sTerIvnaRoAmJWrhgk2+TfmzFoneJ1if0pgesVZFZGTKMQPZqez9i5EFdDwd9b+Jd1wQW8b8CH7ve03SmrvSuHMN25H4EUuE2J4fBbvWuAnFmY57WHDhuyWEtq5cEQVh+c2XbumAEsA0jOUhtphKi/g+3H4GsU53Ez/CWDS8soLf2NNOV0L78QTtvhBOPzxzoiY5DZPFcepWqMtnQwfKiXEeJQUBSIVjXKTdGVzT5ZMxGINMGhhpi+zts5p1aOwEaZozpEpYlf1dFfsXVGXhV43KlGZnsNURlSHiIvSSY/CII5KXbA5DZc2P22/jc="
    # s3secretAccessKey
    - secure: "RcpdPpF6sR6xEqYFkYSbwq533V+qCeySMBgYCEsmWsntuaBpkErU/uSoD6IG1exflQ34fZMAPUPobxIJjp94be6oEqOpZSLMSnzEW5wQKipnIkTQ2+I73/soiTwNo4ZjgXuR3y3JaAUdn2ScC9gETzvF2VM+XJ8r4t1O6H3x6Uds4ZtpeXi47X4cQnuU9tKgbz85yJ2IZ6hQxiLItkkhexLvF6XQQJFaWueAt0SJCSWZtWhVTQt/qeOW/HTRr/OwCknkfIUqJ5lRc+rsME0jVwwwShJlEY1/c6g2CqyYZwIot3Oa1wr5NNRuKWfYdGNdIwi5PoiRBTPkvjld/JO+sZuAsrLBQs0AWXGPqgi6UmzyzOhKhbsv93QFasZoGEoqUDo5/C4ibGJoEvN/R9X7Q0E9iheFPDtRogQ1gN5UR2qo5v4TJcYgdx2zcnxWlOo5FSa1SQKHZRCFAscqUwO1qukjDwha9B9JWn676v2nOFN/vX/TSsjjXe5DvVLpTCXnzC/wSIwElLXV1iK3FVepYcuelhTBYgkJKgTRwDYo/fOvVbSlyyJbj0OeuAwyVMZOal5KzapOfa+RDgnoan1oc7aXFhcP71kYnJesQAb5gG0/kb1t7vcsN6mLuKrhuiAoUWjPrb++7xILVF1kCRwSGU35UBocKEL+H13vtI8qCy4="

before_install:
  # native dependencies
  - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
  - sudo apt-get update -qq
  - sudo apt-get install -qq gcc-4.8 g++-4.8 gcc-4.8-multilib g++-4.8-multilib libelf-dev
  - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 90 --slave /usr/bin/g++ g++ /usr/bin/g++-4.8
  - gcc --version
  - g++ --version
  # npm dependencies
  - npm install node-gyp -g
  - npm install electron-prebuilt@${target} -g
  - npm install
  # Only publish tags
  - PUBLISH_BINARY=false
  - if [[ $TRAVIS_BRANCH == `git describe --tags --always HEAD` ]]; then PUBLISH_BINARY=true; fi;
  # or if we put [publish binary] in the commit message
  - COMMIT_MESSAGE=$(git show -s --format=%B $TRAVIS_COMMIT | tr -d '\n')
  - if test "${COMMIT_MESSAGE#*'[publish binary]'}" != "$COMMIT_MESSAGE"; then PUBLISH_BINARY=true; fi;

script:
  - $bin_dir/elb configure x64 release --target ${target}
  - $bin_dir/elb configure x86 release --target ${target}

after_success:
  # pack the binaries for this platform
  - node $bin_dir/elpack --channel $TRAVIS_BRANCH --arch x64 --configuration release
  - node $bin_dir/elpack --channel $TRAVIS_BRANCH --arch x86 --configuration release
  # publish to s3
  - if [ $PUBLISH_BINARY ]; then node $bin_dir/elpub -c $TRAVIS_BRANCH -b evolve-bin -a x64 -i $s3accessKeyId -k $s3secretAccessKey -C release; fi
  - if [ $PUBLISH_BINARY ]; then node $bin_dir/elpub -c $TRAVIS_BRANCH -b evolve-bin -a x86 -i $s3accessKeyId -k $s3secretAccessKey -C release; fi
